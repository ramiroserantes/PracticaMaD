//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("practicamadModel", "FK_CategoryPhoto", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.Category), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Photo), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "FK_PhotoComment", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.Photo), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Comment), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "FK_UserComment", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Comment), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "FK_PhotoTag", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.Photo), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Tag), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "FK_UserPhoto", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Photo), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "FK_UserTag", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Tag), true)]
[assembly: EdmRelationshipAttribute("practicamadModel", "Follow", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile), "UserProfile1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile))]
[assembly: EdmRelationshipAttribute("practicamadModel", "Likes", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.Photo), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Es.Udc.DotNet.PracticaMaD.Model.UserProfile))]

#endregion

namespace Es.Udc.DotNet.PracticaMaD.Model
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class practicamad : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto practicamad usando la cadena de conexión encontrada en la sección 'practicamad' del archivo de configuración de la aplicación.
        /// </summary>
        public practicamad() : base("name=practicamad", "practicamad")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto practicamad.
        /// </summary>
        public practicamad(string connectionString) : base(connectionString, "practicamad")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto practicamad.
        /// </summary>
        public practicamad(EntityConnection connection) : base(connection, "practicamad")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Comment> Comment
        {
            get
            {
                if ((_Comment == null))
                {
                    _Comment = base.CreateObjectSet<Comment>("Comment");
                }
                return _Comment;
            }
        }
        private ObjectSet<Comment> _Comment;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Photo> Photo
        {
            get
            {
                if ((_Photo == null))
                {
                    _Photo = base.CreateObjectSet<Photo>("Photo");
                }
                return _Photo;
            }
        }
        private ObjectSet<Photo> _Photo;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<UserProfile> UserProfile
        {
            get
            {
                if ((_UserProfile == null))
                {
                    _UserProfile = base.CreateObjectSet<UserProfile>("UserProfile");
                }
                return _UserProfile;
            }
        }
        private ObjectSet<UserProfile> _UserProfile;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Category. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Comment. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToComment(Comment comment)
        {
            base.AddObject("Comment", comment);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Photo. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPhoto(Photo photo)
        {
            base.AddObject("Photo", photo);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Tag. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet UserProfile. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUserProfile(UserProfile userProfile)
        {
            base.AddObject("UserProfile", userProfile);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="practicamadModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Category.
        /// </summary>
        /// <param name="categoryId">Valor inicial de la propiedad categoryId.</param>
        /// <param name="categoryType">Valor inicial de la propiedad categoryType.</param>
        public static Category CreateCategory(global::System.Int64 categoryId, global::System.String categoryType)
        {
            Category category = new Category();
            category.categoryId = categoryId;
            category.categoryType = categoryType;
            return category;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 categoryId
        {
            get
            {
                return _categoryId;
            }
            set
            {
                if (_categoryId != value)
                {
                    OncategoryIdChanging(value);
                    ReportPropertyChanging("categoryId");
                    _categoryId = StructuralObject.SetValidValue(value, "categoryId");
                    ReportPropertyChanged("categoryId");
                    OncategoryIdChanged();
                }
            }
        }
        private global::System.Int64 _categoryId;
        partial void OncategoryIdChanging(global::System.Int64 value);
        partial void OncategoryIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String categoryType
        {
            get
            {
                return _categoryType;
            }
            set
            {
                OncategoryTypeChanging(value);
                ReportPropertyChanging("categoryType");
                _categoryType = StructuralObject.SetValidValue(value, false, "categoryType");
                ReportPropertyChanged("categoryType");
                OncategoryTypeChanged();
            }
        }
        private global::System.String _categoryType;
        partial void OncategoryTypeChanging(global::System.String value);
        partial void OncategoryTypeChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_CategoryPhoto", "Photo")]
        public EntityCollection<Photo> Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("practicamadModel.FK_CategoryPhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("practicamadModel.FK_CategoryPhoto", "Photo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="practicamadModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Comment.
        /// </summary>
        /// <param name="commentId">Valor inicial de la propiedad commentId.</param>
        /// <param name="commentDescription">Valor inicial de la propiedad commentDescription.</param>
        /// <param name="commentDate">Valor inicial de la propiedad commentDate.</param>
        /// <param name="userId">Valor inicial de la propiedad userId.</param>
        /// <param name="photoId">Valor inicial de la propiedad photoId.</param>
        public static Comment CreateComment(global::System.Int64 commentId, global::System.String commentDescription, global::System.DateTime commentDate, global::System.Int64 userId, global::System.Int64 photoId)
        {
            Comment comment = new Comment();
            comment.commentId = commentId;
            comment.commentDescription = commentDescription;
            comment.commentDate = commentDate;
            comment.userId = userId;
            comment.photoId = photoId;
            return comment;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 commentId
        {
            get
            {
                return _commentId;
            }
            set
            {
                if (_commentId != value)
                {
                    OncommentIdChanging(value);
                    ReportPropertyChanging("commentId");
                    _commentId = StructuralObject.SetValidValue(value, "commentId");
                    ReportPropertyChanged("commentId");
                    OncommentIdChanged();
                }
            }
        }
        private global::System.Int64 _commentId;
        partial void OncommentIdChanging(global::System.Int64 value);
        partial void OncommentIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String commentDescription
        {
            get
            {
                return _commentDescription;
            }
            set
            {
                OncommentDescriptionChanging(value);
                ReportPropertyChanging("commentDescription");
                _commentDescription = StructuralObject.SetValidValue(value, false, "commentDescription");
                ReportPropertyChanged("commentDescription");
                OncommentDescriptionChanged();
            }
        }
        private global::System.String _commentDescription;
        partial void OncommentDescriptionChanging(global::System.String value);
        partial void OncommentDescriptionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime commentDate
        {
            get
            {
                return _commentDate;
            }
            set
            {
                OncommentDateChanging(value);
                ReportPropertyChanging("commentDate");
                _commentDate = StructuralObject.SetValidValue(value, "commentDate");
                ReportPropertyChanged("commentDate");
                OncommentDateChanged();
            }
        }
        private global::System.DateTime _commentDate;
        partial void OncommentDateChanging(global::System.DateTime value);
        partial void OncommentDateChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int64 _userId;
        partial void OnuserIdChanging(global::System.Int64 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 photoId
        {
            get
            {
                return _photoId;
            }
            set
            {
                OnphotoIdChanging(value);
                ReportPropertyChanging("photoId");
                _photoId = StructuralObject.SetValidValue(value, "photoId");
                ReportPropertyChanged("photoId");
                OnphotoIdChanged();
            }
        }
        private global::System.Int64 _photoId;
        partial void OnphotoIdChanging(global::System.Int64 value);
        partial void OnphotoIdChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_PhotoComment", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoComment", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoComment", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoComment", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("practicamadModel.FK_PhotoComment", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserComment", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserComment", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserComment", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserComment", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("practicamadModel.FK_UserComment", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="practicamadModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Photo.
        /// </summary>
        /// <param name="photoId">Valor inicial de la propiedad photoId.</param>
        /// <param name="title">Valor inicial de la propiedad title.</param>
        /// <param name="photoDescription">Valor inicial de la propiedad photoDescription.</param>
        /// <param name="photoDate">Valor inicial de la propiedad photoDate.</param>
        /// <param name="f">Valor inicial de la propiedad f.</param>
        /// <param name="t">Valor inicial de la propiedad t.</param>
        /// <param name="iso">Valor inicial de la propiedad iso.</param>
        /// <param name="wb">Valor inicial de la propiedad wb.</param>
        /// <param name="categoryId">Valor inicial de la propiedad categoryId.</param>
        /// <param name="userId">Valor inicial de la propiedad userId.</param>
        public static Photo CreatePhoto(global::System.Int64 photoId, global::System.String title, global::System.String photoDescription, global::System.DateTime photoDate, global::System.Int64 f, global::System.Int64 t, global::System.String iso, global::System.Int64 wb, global::System.Int64 categoryId, global::System.Int64 userId)
        {
            Photo photo = new Photo();
            photo.photoId = photoId;
            photo.title = title;
            photo.photoDescription = photoDescription;
            photo.photoDate = photoDate;
            photo.f = f;
            photo.t = t;
            photo.iso = iso;
            photo.wb = wb;
            photo.categoryId = categoryId;
            photo.userId = userId;
            return photo;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 photoId
        {
            get
            {
                return _photoId;
            }
            set
            {
                if (_photoId != value)
                {
                    OnphotoIdChanging(value);
                    ReportPropertyChanging("photoId");
                    _photoId = StructuralObject.SetValidValue(value, "photoId");
                    ReportPropertyChanged("photoId");
                    OnphotoIdChanged();
                }
            }
        }
        private global::System.Int64 _photoId;
        partial void OnphotoIdChanging(global::System.Int64 value);
        partial void OnphotoIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false, "title");
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String photoDescription
        {
            get
            {
                return _photoDescription;
            }
            set
            {
                OnphotoDescriptionChanging(value);
                ReportPropertyChanging("photoDescription");
                _photoDescription = StructuralObject.SetValidValue(value, false, "photoDescription");
                ReportPropertyChanged("photoDescription");
                OnphotoDescriptionChanged();
            }
        }
        private global::System.String _photoDescription;
        partial void OnphotoDescriptionChanging(global::System.String value);
        partial void OnphotoDescriptionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime photoDate
        {
            get
            {
                return _photoDate;
            }
            set
            {
                OnphotoDateChanging(value);
                ReportPropertyChanging("photoDate");
                _photoDate = StructuralObject.SetValidValue(value, "photoDate");
                ReportPropertyChanged("photoDate");
                OnphotoDateChanged();
            }
        }
        private global::System.DateTime _photoDate;
        partial void OnphotoDateChanging(global::System.DateTime value);
        partial void OnphotoDateChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 f
        {
            get
            {
                return _f;
            }
            set
            {
                OnfChanging(value);
                ReportPropertyChanging("f");
                _f = StructuralObject.SetValidValue(value, "f");
                ReportPropertyChanged("f");
                OnfChanged();
            }
        }
        private global::System.Int64 _f;
        partial void OnfChanging(global::System.Int64 value);
        partial void OnfChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 t
        {
            get
            {
                return _t;
            }
            set
            {
                OntChanging(value);
                ReportPropertyChanging("t");
                _t = StructuralObject.SetValidValue(value, "t");
                ReportPropertyChanged("t");
                OntChanged();
            }
        }
        private global::System.Int64 _t;
        partial void OntChanging(global::System.Int64 value);
        partial void OntChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iso
        {
            get
            {
                return _iso;
            }
            set
            {
                OnisoChanging(value);
                ReportPropertyChanging("iso");
                _iso = StructuralObject.SetValidValue(value, false, "iso");
                ReportPropertyChanged("iso");
                OnisoChanged();
            }
        }
        private global::System.String _iso;
        partial void OnisoChanging(global::System.String value);
        partial void OnisoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 wb
        {
            get
            {
                return _wb;
            }
            set
            {
                OnwbChanging(value);
                ReportPropertyChanging("wb");
                _wb = StructuralObject.SetValidValue(value, "wb");
                ReportPropertyChanged("wb");
                OnwbChanged();
            }
        }
        private global::System.Int64 _wb;
        partial void OnwbChanging(global::System.Int64 value);
        partial void OnwbChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 categoryId
        {
            get
            {
                return _categoryId;
            }
            set
            {
                OncategoryIdChanging(value);
                ReportPropertyChanging("categoryId");
                _categoryId = StructuralObject.SetValidValue(value, "categoryId");
                ReportPropertyChanged("categoryId");
                OncategoryIdChanged();
            }
        }
        private global::System.Int64 _categoryId;
        partial void OncategoryIdChanging(global::System.Int64 value);
        partial void OncategoryIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int64 _userId;
        partial void OnuserIdChanging(global::System.Int64 value);
        partial void OnuserIdChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_CategoryPhoto", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("practicamadModel.FK_CategoryPhoto", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("practicamadModel.FK_CategoryPhoto", "Category").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("practicamadModel.FK_CategoryPhoto", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("practicamadModel.FK_CategoryPhoto", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_PhotoComment", "Comment")]
        public EntityCollection<Comment> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("practicamadModel.FK_PhotoComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("practicamadModel.FK_PhotoComment", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_PhotoTag", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("practicamadModel.FK_PhotoTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("practicamadModel.FK_PhotoTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserPhoto", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserPhoto", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserPhoto", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserPhoto", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("practicamadModel.FK_UserPhoto", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "Likes", "UserProfile")]
        public EntityCollection<UserProfile> UserProfile1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("practicamadModel.Likes", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("practicamadModel.Likes", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="practicamadModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Tag.
        /// </summary>
        /// <param name="tagId">Valor inicial de la propiedad tagId.</param>
        /// <param name="tagName">Valor inicial de la propiedad tagName.</param>
        /// <param name="userId">Valor inicial de la propiedad userId.</param>
        /// <param name="photoId">Valor inicial de la propiedad photoId.</param>
        public static Tag CreateTag(global::System.Int64 tagId, global::System.String tagName, global::System.Int64 userId, global::System.Int64 photoId)
        {
            Tag tag = new Tag();
            tag.tagId = tagId;
            tag.tagName = tagName;
            tag.userId = userId;
            tag.photoId = photoId;
            return tag;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 tagId
        {
            get
            {
                return _tagId;
            }
            set
            {
                if (_tagId != value)
                {
                    OntagIdChanging(value);
                    ReportPropertyChanging("tagId");
                    _tagId = StructuralObject.SetValidValue(value, "tagId");
                    ReportPropertyChanged("tagId");
                    OntagIdChanged();
                }
            }
        }
        private global::System.Int64 _tagId;
        partial void OntagIdChanging(global::System.Int64 value);
        partial void OntagIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tagName
        {
            get
            {
                return _tagName;
            }
            set
            {
                OntagNameChanging(value);
                ReportPropertyChanging("tagName");
                _tagName = StructuralObject.SetValidValue(value, false, "tagName");
                ReportPropertyChanged("tagName");
                OntagNameChanged();
            }
        }
        private global::System.String _tagName;
        partial void OntagNameChanging(global::System.String value);
        partial void OntagNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int64 _userId;
        partial void OnuserIdChanging(global::System.Int64 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 photoId
        {
            get
            {
                return _photoId;
            }
            set
            {
                OnphotoIdChanging(value);
                ReportPropertyChanging("photoId");
                _photoId = StructuralObject.SetValidValue(value, "photoId");
                ReportPropertyChanged("photoId");
                OnphotoIdChanged();
            }
        }
        private global::System.Int64 _photoId;
        partial void OnphotoIdChanging(global::System.Int64 value);
        partial void OnphotoIdChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_PhotoTag", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoTag", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoTag", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("practicamadModel.FK_PhotoTag", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("practicamadModel.FK_PhotoTag", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserTag", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserTag", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserTag", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("practicamadModel.FK_UserTag", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("practicamadModel.FK_UserTag", "UserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="practicamadModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto UserProfile.
        /// </summary>
        /// <param name="userId">Valor inicial de la propiedad userId.</param>
        /// <param name="loginName">Valor inicial de la propiedad loginName.</param>
        /// <param name="userPassword">Valor inicial de la propiedad userPassword.</param>
        /// <param name="firstName">Valor inicial de la propiedad firstName.</param>
        /// <param name="lastName">Valor inicial de la propiedad lastName.</param>
        /// <param name="email">Valor inicial de la propiedad email.</param>
        /// <param name="internalization">Valor inicial de la propiedad internalization.</param>
        public static UserProfile CreateUserProfile(global::System.Int64 userId, global::System.String loginName, global::System.String userPassword, global::System.String firstName, global::System.String lastName, global::System.String email, global::System.String internalization)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.userId = userId;
            userProfile.loginName = loginName;
            userProfile.userPassword = userPassword;
            userProfile.firstName = firstName;
            userProfile.lastName = lastName;
            userProfile.email = email;
            userProfile.internalization = internalization;
            return userProfile;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value, "userId");
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int64 _userId;
        partial void OnuserIdChanging(global::System.Int64 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String loginName
        {
            get
            {
                return _loginName;
            }
            set
            {
                OnloginNameChanging(value);
                ReportPropertyChanging("loginName");
                _loginName = StructuralObject.SetValidValue(value, false, "loginName");
                ReportPropertyChanged("loginName");
                OnloginNameChanged();
            }
        }
        private global::System.String _loginName;
        partial void OnloginNameChanging(global::System.String value);
        partial void OnloginNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userPassword
        {
            get
            {
                return _userPassword;
            }
            set
            {
                OnuserPasswordChanging(value);
                ReportPropertyChanging("userPassword");
                _userPassword = StructuralObject.SetValidValue(value, false, "userPassword");
                ReportPropertyChanged("userPassword");
                OnuserPasswordChanged();
            }
        }
        private global::System.String _userPassword;
        partial void OnuserPasswordChanging(global::System.String value);
        partial void OnuserPasswordChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String firstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                OnfirstNameChanging(value);
                ReportPropertyChanging("firstName");
                _firstName = StructuralObject.SetValidValue(value, false, "firstName");
                ReportPropertyChanged("firstName");
                OnfirstNameChanged();
            }
        }
        private global::System.String _firstName;
        partial void OnfirstNameChanging(global::System.String value);
        partial void OnfirstNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, false, "lastName");
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String internalization
        {
            get
            {
                return _internalization;
            }
            set
            {
                OninternalizationChanging(value);
                ReportPropertyChanging("internalization");
                _internalization = StructuralObject.SetValidValue(value, false, "internalization");
                ReportPropertyChanged("internalization");
                OninternalizationChanged();
            }
        }
        private global::System.String _internalization;
        partial void OninternalizationChanging(global::System.String value);
        partial void OninternalizationChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserComment", "Comment")]
        public EntityCollection<Comment> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("practicamadModel.FK_UserComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("practicamadModel.FK_UserComment", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserPhoto", "Photo")]
        public EntityCollection<Photo> Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("practicamadModel.FK_UserPhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("practicamadModel.FK_UserPhoto", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "FK_UserTag", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("practicamadModel.FK_UserTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("practicamadModel.FK_UserTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "Follow", "UserProfile1")]
        public EntityCollection<UserProfile> UserProfile1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("practicamadModel.Follow", "UserProfile1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("practicamadModel.Follow", "UserProfile1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "Follow", "UserProfile")]
        public EntityCollection<UserProfile> UserProfile2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("practicamadModel.Follow", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("practicamadModel.Follow", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("practicamadModel", "Likes", "Photo")]
        public EntityCollection<Photo> Photo1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("practicamadModel.Likes", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("practicamadModel.Likes", "Photo", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
